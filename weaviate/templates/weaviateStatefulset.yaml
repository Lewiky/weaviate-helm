apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: weaviate
  labels:
    name: weaviate
    app: weaviate
spec:
  replicas: {{ .Values.replicas }}
  serviceName: {{ .Values.service.name }}
  selector:
    matchLabels:
      app: weaviate
  template:
    metadata:
      labels:
        app: weaviate
      {{- with .Values.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                        - weaviate
                topologyKey: "kubernetes.io/hostname"
      containers:
      - name: weaviate
        image: '{{ .Values.image.registry }}/{{ .Values.image.repo }}:{{ .Values.image.tag }}'
        imagePullPolicy: Always
        {{- with .Values.command }}
        command: {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.args }}
        args: {{ toYaml . | nindent 10 }}
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        {{- if or $.Values.env $.Values.envSecrets }}
          {{- range $key, $value := $.Values.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- range $key, $secret := $.Values.envSecrets }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $secret }}
                key: {{ $key | quote }}
          {{- end }}
          {{- end }}
          - name: STANDALONE_MODE
            value: 'true'
          - name: PERSISTENCE_DATA_PATH
            value: '/var/lib/weaviate'
          - name: DEFAULT_VECTORIZER_MODULE
            value: {{ index .Values "modules" "default_vectorizer_module" | trim }}
          {{ template "enabled_modules" . }}
          {{- if index .Values "modules" "text2vec-transformers" "enabled" }}
          - name: TRANSFORMERS_INFERENCE_API
            value: http://{{ index .Values "modules" "text2vec-transformers" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.cluster.local:8080
          {{- else if index .Values "modules" "text2vec-transformers" "inferenceUrl" }}
          - name: TRANSFORMERS_INFERENCE_API
            value: {{ index .Values "modules" "text2vec-transformers" "inferenceUrl" }}
          {{- else }}
              {{- if index .Values "modules" "text2vec-transformers" "passageQueryServices" "passage" "enabled" }}
          - name: TRANSFORMERS_PASSAGE_INFERENCE_API
            value: http://{{ index .Values "modules" "text2vec-transformers" "passageQueryServices" "passage" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.cluster.local:8080
              {{- else if index .Values "modules" "text2vec-transformers" "passageQueryServices" "passage" "inferenceUrl" }}
          - name: TRANSFORMERS_PASSAGE_INFERENCE_API
            value: {{ index .Values "modules" "text2vec-transformers" "passageQueryServices" "passage" "inferenceUrl" }}
              {{- end }}
              {{- if index .Values "modules" "text2vec-transformers" "passageQueryServices" "query" "enabled" }}
          - name: TRANSFORMERS_QUERY_INFERENCE_API
            value: http://{{ index .Values "modules" "text2vec-transformers" "passageQueryServices" "query" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.cluster.local:8080
              {{- else if index .Values "modules" "text2vec-transformers" "passageQueryServices" "query" "inferenceUrl" }}
          - name: TRANSFORMERS_QUERY_INFERENCE_API
            value: {{ index .Values "modules" "text2vec-transformers" "passageQueryServices" "query" "inferenceUrl" }}
              {{- end }}
          {{- end }}
          {{- if index .Values "modules" "multi2vec-clip" "enabled" }}
          - name: CLIP_INFERENCE_API
            value: http://{{ index .Values "modules" "multi2vec-clip" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.cluster.local:8080
          {{- else if index .Values "modules" "multi2vec-clip" "inferenceUrl" }}
          - name: CLIP_INFERENCE_API
            value: {{ index .Values "modules" "multi2vec-clip" "inferenceUrl" }}
          {{- end }}
          {{- if index .Values "modules" "qna-transformers" "enabled" }}
          - name: QNA_INFERENCE_API
            value: http://{{ index .Values "modules" "qna-transformers" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.cluster.local:8080
          {{- else if index .Values "modules" "qna-transformers" "inferenceUrl" }}
          - name: QNA_INFERENCE_API
            value: {{ index .Values "modules" "qna-transformers" "inferenceUrl" }}
          {{- end }}
          {{- if index .Values "modules" "img2vec-neural" "enabled" }}
          - name: IMAGE_INFERENCE_API
            value: http://{{ index .Values "modules" "img2vec-neural" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.cluster.local:8080
          {{- else if index .Values "modules" "img2vec-neural" "inferenceUrl" }}
          - name: IMAGE_INFERENCE_API
            value: {{ index .Values "modules" "img2vec-neural" "inferenceUrl" }}
          {{- end }}
          {{- if index .Values "modules" "text-spellcheck" "enabled" }}
          - name: SPELLCHECK_INFERENCE_API
            value: http://{{ index .Values "modules" "text-spellcheck" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.cluster.local:8080
          {{- else if index .Values "modules" "text-spellcheck" "inferenceUrl" }}
          - name: SPELLCHECK_INFERENCE_API
            value: {{ index .Values "modules" "text-spellcheck" "inferenceUrl" }}
          {{- end }}
          {{- if index .Values "modules" "ner-transformers" "enabled" }}
          - name: NER_INFERENCE_API
            value: http://{{ index .Values "modules" "ner-transformers" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.cluster.local:8080
          {{- else if index .Values "modules" "ner-transformers" "inferenceUrl" }}
          - name: NER_INFERENCE_API
            value: {{ index .Values "modules" "ner-transformers" "inferenceUrl" }}
          {{- end }}
          {{- if and (index .Values "modules" "text2vec-openai" "enabled") (index .Values "modules" "text2vec-openai" "apiKey") }}
          - name: OPENAI_APIKEY
            valueFrom:
              secretKeyRef:
                name: weaviate-openai
                key: apiKey
          {{- end  }}
          {{- if and (index .Values "modules" "text2vec-huggingface" "enabled") (index .Values "modules" "text2vec-huggingface" "apiKey") }}
          - name: HUGGINGFACE_APIKEY
            valueFrom:
              secretKeyRef:
                name: weaviate-huggingface
                key: apiKey
          {{- end  }}
          {{- if and (index .Values "backups" "filesystem" "enabled") (index .Values "backups" "filesystem" "envconfig") }}
          {{- range $key, $value := index .Values "backups" "filesystem" "envconfig" }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- end  }}
          - name: CLUSTER_GOSSIP_BIND_PORT
            value: "7000"
          - name: CLUSTER_DATA_BIND_PORT
            value: "7001"
          - name: CLUSTER_JOIN
            value: {{ .Values.service.name }}-headless.{{ .Release.Namespace }}.svc.cluster.local
        ports:
          - containerPort: 8080
          {{- if .Values.env.PROMETHEUS_MONITORING_ENABLED }}
          - name: metrics
            containerPort: 2112
            protocol: TCP
          {{- end }}
        volumeMounts:
          - name: weaviate-config
            mountPath: /weaviate-config
          - name: weaviate-data
            mountPath: /var/lib/weaviate
        {{- if .Values.startupProbe.enabled }}
        startupProbe:
          httpGet:
            path: /v1/.well-known/ready
            port: 8080
          initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.startupProbe.periodSeconds }}
          failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          successThreshold: {{ .Values.startupProbe.successThreshold }}
          timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /v1/.well-known/live
            port: 8080
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        readinessProbe:
          httpGet:
            path: /v1/.well-known/ready
            port: 8080
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
      volumes:
        - name: weaviate-config
          configMap:
            {{ if .Values.custom_config_map.enabled }}name: {{ .Values.custom_config_map.name }} {{ else }}name: weaviate-config{{ end }}
        # - name: weaviate-persistence-data-vol
        #   persistentVolumeClaim:
        #     {{ if empty .Values.storage.fullnameOverride }}
        #     claimName: weaviate-persistence-data
        #     {{ else }}
        #     claimName: {{ .Values.storage.fullnameOverride }}
        #     {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
      {{- end }}

  volumeClaimTemplates:
  - metadata:
      name: weaviate-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.storage.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.storage.size }}
